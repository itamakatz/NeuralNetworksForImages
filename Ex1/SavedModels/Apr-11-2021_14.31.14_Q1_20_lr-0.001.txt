Net(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (fc1): Linear(in_features=2048, out_features=128, bias=True)
  (fc2): Linear(in_features=128, out_features=10, bias=True)
  (loss_function): CrossEntropyLoss()
)
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1           [-1, 32, 32, 32]             896
         MaxPool2d-2           [-1, 32, 16, 16]               0
            Conv2d-3           [-1, 64, 16, 16]          18,496
         MaxPool2d-4             [-1, 64, 8, 8]               0
            Conv2d-5            [-1, 128, 8, 8]          73,856
         MaxPool2d-6            [-1, 128, 4, 4]               0
            Linear-7                  [-1, 128]         262,272
            Linear-8                   [-1, 10]           1,290
================================================================
Total params: 356,810
Trainable params: 356,810
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.01
Forward/backward pass size (MB): 0.55
Params size (MB): 1.36
Estimated Total Size (MB): 1.92
----------------------------------------------------------------

Extra info:
Model's state_dict:
conv1.weight 	 torch.Size([32, 3, 3, 3])
conv1.bias 	 torch.Size([32])
conv2.weight 	 torch.Size([64, 32, 3, 3])
conv2.bias 	 torch.Size([64])
conv3.weight 	 torch.Size([128, 64, 3, 3])
conv3.bias 	 torch.Size([128])
fc1.weight 	 torch.Size([128, 2048])
fc1.bias 	 torch.Size([128])
fc2.weight 	 torch.Size([10, 128])
fc2.bias 	 torch.Size([10])

Optimizer's state_dict:
state 	 {}
param_groups 	 [{'lr': 0.001, 'momentum': 0.9, 'dampening': 0, 'weight_decay': 0, 'nesterov': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}]

epoch: 1, train_loss: 1.5383492204672098, train_accuracy: 0.43772, test_loss: 1.2629000126183032, test_accuracy: 0.5505
epoch: 2, train_loss: 1.0212309719290584, train_accuracy: 0.6383, test_loss: 0.950122974055633, test_accuracy: 0.6698
epoch: 3, train_loss: 0.8075523522440716, train_accuracy: 0.71694, test_loss: 0.808395299673453, test_accuracy: 0.7212
epoch: 4, train_loss: 0.6725793204365578, train_accuracy: 0.76272, test_loss: 0.8096658756535501, test_accuracy: 0.7208
epoch: 5, train_loss: 0.5660423852438666, train_accuracy: 0.80266, test_loss: 0.8158803121130215, test_accuracy: 0.7225
epoch: 6, train_loss: 0.47426430023335325, train_accuracy: 0.8348, test_loss: 0.7959625441336772, test_accuracy: 0.7359
epoch: 7, train_loss: 0.3943091622850257, train_accuracy: 0.86018, test_loss: 0.9098343899662479, test_accuracy: 0.7274
epoch: 8, train_loss: 0.3262743762765166, train_accuracy: 0.8845, test_loss: 0.8610012358907887, test_accuracy: 0.7451
epoch: 9, train_loss: 0.27555805727809907, train_accuracy: 0.902, test_loss: 0.9580734917649177, test_accuracy: 0.7424
epoch: 10, train_loss: 0.24091662092821542, train_accuracy: 0.91478, test_loss: 1.0054599324584037, test_accuracy: 0.7507
epoch: 11, train_loss: 0.21056204213947566, train_accuracy: 0.9266, test_loss: 1.084516803806213, test_accuracy: 0.7448
epoch: 12, train_loss: 0.17693586109317486, train_accuracy: 0.9384, test_loss: 1.1891069879941336, test_accuracy: 0.7484
epoch: 13, train_loss: 0.16983895263022641, train_accuracy: 0.94094, test_loss: 1.3414497259490539, test_accuracy: 0.7348
epoch: 14, train_loss: 0.170827483630864, train_accuracy: 0.94036, test_loss: 1.25571710358742, test_accuracy: 0.7466
epoch: 15, train_loss: 0.153655188554037, train_accuracy: 0.9479, test_loss: 1.5854348306611654, test_accuracy: 0.7123
epoch: 16, train_loss: 0.1444017956823078, train_accuracy: 0.95148, test_loss: 1.4905417815619806, test_accuracy: 0.7313
epoch: 17, train_loss: 0.15376648568324572, train_accuracy: 0.9501, test_loss: 1.457159125884571, test_accuracy: 0.7419
epoch: 18, train_loss: 0.1456171571540625, train_accuracy: 0.9523, test_loss: 1.4982965436180617, test_accuracy: 0.7329
epoch: 19, train_loss: 0.12328559293989927, train_accuracy: 0.95912, test_loss: 1.6202628283283218, test_accuracy: 0.7381
epoch: 20, train_loss: 0.12764024579131855, train_accuracy: 0.9587, test_loss: 1.7792606779660667, test_accuracy: 0.7207
epoch: 21, train_loss: 0.12736356849838718, train_accuracy: 0.96016, test_loss: 1.7631773828782964, test_accuracy: 0.7311
epoch: 22, train_loss: 0.14608357749569376, train_accuracy: 0.95406, test_loss: 1.7164059747302471, test_accuracy: 0.7397
epoch: 23, train_loss: 0.13632222302774083, train_accuracy: 0.95736, test_loss: 1.771264287577611, test_accuracy: 0.7275
epoch: 24, train_loss: 0.11969538664873365, train_accuracy: 0.96322, test_loss: 1.9026356799659807, test_accuracy: 0.7358
epoch: 25, train_loss: 0.1353255510075395, train_accuracy: 0.95844, test_loss: 1.8765643844566913, test_accuracy: 0.729
epoch: 26, train_loss: 0.14109349176083527, train_accuracy: 0.95762, test_loss: 1.8165088108526124, test_accuracy: 0.737
epoch: 27, train_loss: 0.13202054964874715, train_accuracy: 0.95996, test_loss: 1.919295905210072, test_accuracy: 0.7348
epoch: 28, train_loss: 0.1348896532896449, train_accuracy: 0.961, test_loss: 1.9729289536367243, test_accuracy: 0.7302
epoch: 29, train_loss: 0.13059743932473164, train_accuracy: 0.96076, test_loss: 2.076548220101312, test_accuracy: 0.7299
epoch: 30, train_loss: 0.13661799247200462, train_accuracy: 0.96094, test_loss: 2.0588033902491034, test_accuracy: 0.7288
epoch: 31, train_loss: 0.1355746829577861, train_accuracy: 0.96062, test_loss: 2.2147776731281774, test_accuracy: 0.7314
epoch: 32, train_loss: 0.1343019827010362, train_accuracy: 0.9622, test_loss: 2.12269484250134, test_accuracy: 0.7264
epoch: 33, train_loss: 0.1398051604559188, train_accuracy: 0.96038, test_loss: 2.2647937186223848, test_accuracy: 0.72
epoch: 34, train_loss: 0.14974564810766686, train_accuracy: 0.95922, test_loss: 2.4397845999420205, test_accuracy: 0.712
epoch: 35, train_loss: 0.14170691037001187, train_accuracy: 0.9597, test_loss: 2.4177188291816245, test_accuracy: 0.7198
epoch: 36, train_loss: 0.1478641158142724, train_accuracy: 0.95954, test_loss: 2.513576051290223, test_accuracy: 0.7201
epoch: 37, train_loss: 0.15176370976099274, train_accuracy: 0.95846, test_loss: 2.225566105843173, test_accuracy: 0.7226
