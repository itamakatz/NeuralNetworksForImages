Net(
  (conv1): Conv2d(3, 32, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (fc1): Linear(in_features=1600, out_features=32, bias=True)
  (fc2): Linear(in_features=32, out_features=10, bias=True)
  (loss_function): CrossEntropyLoss()
)
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1           [-1, 32, 28, 28]           2,432
         MaxPool2d-2           [-1, 32, 14, 14]               0
            Conv2d-3           [-1, 64, 10, 10]          51,264
         MaxPool2d-4             [-1, 64, 5, 5]               0
            Linear-5                   [-1, 32]          51,232
            Linear-6                   [-1, 10]             330
================================================================
Total params: 105,258
Trainable params: 105,258
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.01
Forward/backward pass size (MB): 0.30
Params size (MB): 0.40
Estimated Total Size (MB): 0.71
----------------------------------------------------------------

Extra info:
Model's state_dict:
conv1.weight 	 torch.Size([32, 3, 5, 5])
conv1.bias 	 torch.Size([32])
conv2.weight 	 torch.Size([64, 32, 5, 5])
conv2.bias 	 torch.Size([64])
fc1.weight 	 torch.Size([32, 1600])
fc1.bias 	 torch.Size([32])
fc2.weight 	 torch.Size([10, 32])
fc2.bias 	 torch.Size([10])

Optimizer's state_dict:
state 	 {}
param_groups 	 [{'lr': 0.001, 'momentum': 0.9, 'dampening': 0, 'weight_decay': 0, 'nesterov': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7]}]

epoch: 1, train_loss: 1.4763914436542989, train_accuracy: 0.46374, test_loss: 1.1706760998934507, test_accuracy: 0.5768
epoch: 2, train_loss: 1.079757891619429, train_accuracy: 0.6191, test_loss: 1.0403856942538172, test_accuracy: 0.6381
epoch: 3, train_loss: 0.9196553970188648, train_accuracy: 0.6812, test_loss: 0.932574792586267, test_accuracy: 0.6758
epoch: 4, train_loss: 0.8188578126664833, train_accuracy: 0.71524, test_loss: 0.9076700614191592, test_accuracy: 0.6859
epoch: 5, train_loss: 0.7449140752875013, train_accuracy: 0.73918, test_loss: 0.8607162897069939, test_accuracy: 0.7076
epoch: 6, train_loss: 0.680260320001496, train_accuracy: 0.76458, test_loss: 0.8895517507296521, test_accuracy: 0.7063
epoch: 7, train_loss: 0.630045364553041, train_accuracy: 0.78, test_loss: 0.9245843878136016, test_accuracy: 0.7014
epoch: 8, train_loss: 0.581434264522517, train_accuracy: 0.7942, test_loss: 0.9811688860201276, test_accuracy: 0.6952
epoch: 9, train_loss: 0.5455806865764313, train_accuracy: 0.80668, test_loss: 0.955043025391479, test_accuracy: 0.7049
epoch: 10, train_loss: 0.5103693650212043, train_accuracy: 0.82088, test_loss: 1.047551948739041, test_accuracy: 0.7054
epoch: 11, train_loss: 0.47952685261665406, train_accuracy: 0.8299, test_loss: 1.0366895176718478, test_accuracy: 0.6992
epoch: 12, train_loss: 0.45223830696196915, train_accuracy: 0.8407, test_loss: 1.1089111385409953, test_accuracy: 0.6926
epoch: 13, train_loss: 0.4289513238395336, train_accuracy: 0.8478, test_loss: 1.1254767460590054, test_accuracy: 0.6972
epoch: 14, train_loss: 0.4153347129363408, train_accuracy: 0.85332, test_loss: 1.2340416714234976, test_accuracy: 0.6843
epoch: 15, train_loss: 0.3921255621115405, train_accuracy: 0.86114, test_loss: 1.2007088233138428, test_accuracy: 0.6961
epoch: 16, train_loss: 0.37065958221815176, train_accuracy: 0.86976, test_loss: 1.3138214670371875, test_accuracy: 0.6863
epoch: 17, train_loss: 0.366425364760131, train_accuracy: 0.8722, test_loss: 1.2688488286081097, test_accuracy: 0.6876
epoch: 18, train_loss: 0.3493972138484586, train_accuracy: 0.87764, test_loss: 1.3932533617430454, test_accuracy: 0.6848
epoch: 19, train_loss: 0.33883639961514794, train_accuracy: 0.88072, test_loss: 1.4691188466025284, test_accuracy: 0.6806
epoch: 20, train_loss: 0.34060551035883496, train_accuracy: 0.88152, test_loss: 1.4599335633156438, test_accuracy: 0.6893
epoch: 21, train_loss: 0.32056722297291745, train_accuracy: 0.88824, test_loss: 1.494846890481517, test_accuracy: 0.6854
epoch: 22, train_loss: 0.32141736740451, train_accuracy: 0.88896, test_loss: 1.597282355044075, test_accuracy: 0.6687
epoch: 23, train_loss: 0.31668788193389524, train_accuracy: 0.89192, test_loss: 1.600630369513624, test_accuracy: 0.6776
epoch: 24, train_loss: 0.30940208769087846, train_accuracy: 0.89478, test_loss: 1.6496295826471807, test_accuracy: 0.6813
epoch: 25, train_loss: 0.3100483093391188, train_accuracy: 0.89506, test_loss: 1.6719078015463027, test_accuracy: 0.6748
epoch: 26, train_loss: 0.30846056121100746, train_accuracy: 0.89602, test_loss: 1.803293396295399, test_accuracy: 0.6693
epoch: 27, train_loss: 0.3056911200809946, train_accuracy: 0.89764, test_loss: 1.772220303760187, test_accuracy: 0.6788
epoch: 28, train_loss: 0.2866833283910682, train_accuracy: 0.90326, test_loss: 1.8154139937794425, test_accuracy: 0.6674
epoch: 29, train_loss: 0.3081854321922973, train_accuracy: 0.89884, test_loss: 1.8480679849962147, test_accuracy: 0.6803
epoch: 30, train_loss: 0.29631039919652835, train_accuracy: 0.90116, test_loss: 1.8602142562633548, test_accuracy: 0.6713
epoch: 31, train_loss: 0.2817898972361016, train_accuracy: 0.90702, test_loss: 1.991809937386314, test_accuracy: 0.6699
epoch: 32, train_loss: 0.30584434381466935, train_accuracy: 0.90248, test_loss: 1.9405644043143202, test_accuracy: 0.6749
epoch: 33, train_loss: 0.30116492954253965, train_accuracy: 0.90186, test_loss: 2.0895079741252998, test_accuracy: 0.6558
epoch: 34, train_loss: 0.3003823632378205, train_accuracy: 0.90476, test_loss: 1.9543185878363132, test_accuracy: 0.6628
epoch: 35, train_loss: 0.29819957033790473, train_accuracy: 0.90472, test_loss: 2.170492069364781, test_accuracy: 0.68
epoch: 36, train_loss: 0.30956289809656273, train_accuracy: 0.90262, test_loss: 2.1598859096897196, test_accuracy: 0.6753
epoch: 37, train_loss: 0.30850824278239747, train_accuracy: 0.90348, test_loss: 2.2285548083140876, test_accuracy: 0.6667
epoch: 38, train_loss: 0.3102737945273508, train_accuracy: 0.90452, test_loss: 2.3993153263510894, test_accuracy: 0.6473
epoch: 39, train_loss: 0.3133080502253108, train_accuracy: 0.90238, test_loss: 2.217899935982017, test_accuracy: 0.6521
epoch: 40, train_loss: 0.30765804190010726, train_accuracy: 0.90656, test_loss: 2.34035100051148, test_accuracy: 0.6615
epoch: 41, train_loss: 0.31497700628088815, train_accuracy: 0.90356, test_loss: 2.2177232391092945, test_accuracy: 0.6735
epoch: 42, train_loss: 0.32566615497061435, train_accuracy: 0.90208, test_loss: 2.3766845661707796, test_accuracy: 0.6655
epoch: 43, train_loss: 0.3071834535563072, train_accuracy: 0.9064, test_loss: 2.3871988512650524, test_accuracy: 0.6546
epoch: 44, train_loss: 0.3232781831859669, train_accuracy: 0.90218, test_loss: 2.373726163983233, test_accuracy: 0.6664
epoch: 45, train_loss: 0.3288190872540161, train_accuracy: 0.9018, test_loss: 2.3791175695997713, test_accuracy: 0.6603
epoch: 46, train_loss: 0.336246979753863, train_accuracy: 0.90038, test_loss: 2.4790941890846314, test_accuracy: 0.6668
epoch: 47, train_loss: 0.3283738028157762, train_accuracy: 0.90278, test_loss: 2.3877950733554254, test_accuracy: 0.6526
epoch: 48, train_loss: 0.3153327154074059, train_accuracy: 0.90644, test_loss: 2.6129452120552537, test_accuracy: 0.6579
epoch: 49, train_loss: 0.3306386810871579, train_accuracy: 0.90372, test_loss: 2.5876763908654166, test_accuracy: 0.6527
epoch: 50, train_loss: 0.3397641658626547, train_accuracy: 0.90104, test_loss: 2.678795716491824, test_accuracy: 0.6534

Accuracy of plane : 75 %
Accuracy of   car : 75 %
Accuracy of  bird : 50 %
Accuracy of   cat : 51 %
Accuracy of  deer : 49 %
Accuracy of   dog : 56 %
Accuracy of  frog : 65 %
Accuracy of horse : 70 %
Accuracy of  ship : 81 %
Accuracy of truck : 78 %
