Net(
  (conv1): Conv2d(3, 4, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(4, 6, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (fc1): Linear(in_features=150, out_features=120, bias=True)
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (fc3): Linear(in_features=84, out_features=10, bias=True)
  (loss_function): CrossEntropyLoss()
)
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1            [-1, 4, 28, 28]             304
         MaxPool2d-2            [-1, 4, 14, 14]               0
            Conv2d-3            [-1, 6, 10, 10]             606
         MaxPool2d-4              [-1, 6, 5, 5]               0
            Linear-5                  [-1, 120]          18,120
            Linear-6                   [-1, 84]          10,164
            Linear-7                   [-1, 10]             850
================================================================
Total params: 30,044
Trainable params: 30,044
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.01
Forward/backward pass size (MB): 0.04
Params size (MB): 0.11
Estimated Total Size (MB): 0.16
----------------------------------------------------------------

Extra info:
Model's state_dict:
conv1.weight 	 torch.Size([4, 3, 5, 5])
conv1.bias 	 torch.Size([4])
conv2.weight 	 torch.Size([6, 4, 5, 5])
conv2.bias 	 torch.Size([6])
fc1.weight 	 torch.Size([120, 150])
fc1.bias 	 torch.Size([120])
fc2.weight 	 torch.Size([84, 120])
fc2.bias 	 torch.Size([84])
fc3.weight 	 torch.Size([10, 84])
fc3.bias 	 torch.Size([10])

Optimizer's state_dict:
state 	 {}
param_groups 	 [{'lr': 0.001, 'momentum': 0.9, 'dampening': 0, 'weight_decay': 0, 'nesterov': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}]

epoch: 1, train_loss: 1.8920121782231332, train_accuracy: 0.29702, test_loss: 1.5491634369134903, test_accuracy: 0.4239
epoch: 2, train_loss: 1.5018165325236321, train_accuracy: 0.45458, test_loss: 1.4304127548217773, test_accuracy: 0.4838
epoch: 3, train_loss: 1.3944325149077177, train_accuracy: 0.50084, test_loss: 1.3690916325688363, test_accuracy: 0.5098
epoch: 4, train_loss: 1.3315887965744735, train_accuracy: 0.52304, test_loss: 1.3524750299245119, test_accuracy: 0.5238
epoch: 5, train_loss: 1.2854431319400668, train_accuracy: 0.54234, test_loss: 1.3353096953988075, test_accuracy: 0.5264
epoch: 6, train_loss: 1.2441441468536854, train_accuracy: 0.55648, test_loss: 1.2849333260685205, test_accuracy: 0.5458
epoch: 7, train_loss: 1.2099504093442857, train_accuracy: 0.56758, test_loss: 1.317799048641324, test_accuracy: 0.5358
epoch: 8, train_loss: 1.1816678386147321, train_accuracy: 0.58058, test_loss: 1.4007898122489453, test_accuracy: 0.519
epoch: 9, train_loss: 1.1566401722071693, train_accuracy: 0.58956, test_loss: 1.2721319644421338, test_accuracy: 0.5622
epoch: 10, train_loss: 1.1309359704683721, train_accuracy: 0.59962, test_loss: 1.2841682352669537, test_accuracy: 0.5636
epoch: 11, train_loss: 1.120202962705791, train_accuracy: 0.6005, test_loss: 1.2603100674040615, test_accuracy: 0.5611
epoch: 12, train_loss: 1.0970408426070213, train_accuracy: 0.61144, test_loss: 1.2437971944309771, test_accuracy: 0.5637
epoch: 13, train_loss: 1.085711918718368, train_accuracy: 0.6152, test_loss: 1.2970204240124672, test_accuracy: 0.5626
epoch: 14, train_loss: 1.0751879295421392, train_accuracy: 0.62064, test_loss: 1.3168543649394064, test_accuracy: 0.5603
epoch: 15, train_loss: 1.0598567658358067, train_accuracy: 0.62556, test_loss: 1.2662129211008548, test_accuracy: 0.5676
epoch: 16, train_loss: 1.0502037663935195, train_accuracy: 0.62606, test_loss: 1.2851982062898577, test_accuracy: 0.5635
epoch: 17, train_loss: 1.0417110182281397, train_accuracy: 0.62898, test_loss: 1.292536231610924, test_accuracy: 0.5681
epoch: 18, train_loss: 1.0350039280061423, train_accuracy: 0.63554, test_loss: 1.2725082113493233, test_accuracy: 0.5676
epoch: 19, train_loss: 1.0305449589755573, train_accuracy: 0.63448, test_loss: 1.3066698515873403, test_accuracy: 0.5517
epoch: 20, train_loss: 1.023777641886361, train_accuracy: 0.63694, test_loss: 1.322847168722935, test_accuracy: 0.5645
epoch: 21, train_loss: 1.017437309247153, train_accuracy: 0.63992, test_loss: 1.4203030727073551, test_accuracy: 0.5426
epoch: 22, train_loss: 1.0105591929616033, train_accuracy: 0.6439, test_loss: 1.3005175628933123, test_accuracy: 0.5619
epoch: 23, train_loss: 0.9976537766746432, train_accuracy: 0.64552, test_loss: 1.3388596513822675, test_accuracy: 0.5536
epoch: 24, train_loss: 0.9988738419313357, train_accuracy: 0.64748, test_loss: 1.3550775824941694, test_accuracy: 0.5487
epoch: 25, train_loss: 0.9939165446870774, train_accuracy: 0.64784, test_loss: 1.3680631444595754, test_accuracy: 0.5537
epoch: 26, train_loss: 0.9904432766007633, train_accuracy: 0.65104, test_loss: 1.3608691732172156, test_accuracy: 0.5625
epoch: 27, train_loss: 0.9890699528762139, train_accuracy: 0.64976, test_loss: 1.3454997982234693, test_accuracy: 0.5534
epoch: 28, train_loss: 0.9777334954532422, train_accuracy: 0.6545, test_loss: 1.3508656566508115, test_accuracy: 0.5479
epoch: 29, train_loss: 0.9883519227886014, train_accuracy: 0.65038, test_loss: 1.3511227778598667, test_accuracy: 0.5521
epoch: 30, train_loss: 0.9797783977927453, train_accuracy: 0.65424, test_loss: 1.3906348595768214, test_accuracy: 0.5465
epoch: 31, train_loss: 0.9775316768969968, train_accuracy: 0.65096, test_loss: 1.343022654563561, test_accuracy: 0.5576
epoch: 32, train_loss: 0.9755551720173284, train_accuracy: 0.65466, test_loss: 1.3655329776795582, test_accuracy: 0.5617
epoch: 33, train_loss: 0.9719418001695909, train_accuracy: 0.65762, test_loss: 1.38513298833929, test_accuracy: 0.5414
epoch: 34, train_loss: 0.966898872297015, train_accuracy: 0.65778, test_loss: 1.4037731522754766, test_accuracy: 0.5458
epoch: 35, train_loss: 0.9661813055443764, train_accuracy: 0.65564, test_loss: 1.3665094703745098, test_accuracy: 0.5598
epoch: 36, train_loss: 0.9662898280875198, train_accuracy: 0.6578, test_loss: 1.414104470051732, test_accuracy: 0.5538
epoch: 37, train_loss: 0.962559688950628, train_accuracy: 0.65856, test_loss: 1.4506393307267689, test_accuracy: 0.5452
epoch: 38, train_loss: 0.9589474078478292, train_accuracy: 0.66084, test_loss: 1.421397394502908, test_accuracy: 0.5478
epoch: 39, train_loss: 0.9590383615815173, train_accuracy: 0.66008, test_loss: 1.449758179584029, test_accuracy: 0.5443
epoch: 40, train_loss: 0.9550276243772544, train_accuracy: 0.66144, test_loss: 1.424317108600028, test_accuracy: 0.5543
epoch: 41, train_loss: 0.9513743370956741, train_accuracy: 0.66146, test_loss: 1.4106267048496752, test_accuracy: 0.5545
epoch: 42, train_loss: 0.9509616013738792, train_accuracy: 0.66236, test_loss: 1.4049354105937295, test_accuracy: 0.5528
epoch: 43, train_loss: 0.9514696922108717, train_accuracy: 0.66264, test_loss: 1.5026922403253615, test_accuracy: 0.5384
epoch: 44, train_loss: 0.9534607872916875, train_accuracy: 0.66112, test_loss: 1.474612858391367, test_accuracy: 0.5489
epoch: 45, train_loss: 0.9506940427419357, train_accuracy: 0.6648, test_loss: 1.4254814278736712, test_accuracy: 0.5557
epoch: 46, train_loss: 0.9481722941592685, train_accuracy: 0.66548, test_loss: 1.4336970025416464, test_accuracy: 0.5461
epoch: 47, train_loss: 0.9538100253268518, train_accuracy: 0.66454, test_loss: 1.528389917204529, test_accuracy: 0.5305
epoch: 48, train_loss: 0.9444362047149427, train_accuracy: 0.66734, test_loss: 1.4164501427225769, test_accuracy: 0.5512
epoch: 49, train_loss: 0.9465638647930091, train_accuracy: 0.66558, test_loss: 1.4610677940179593, test_accuracy: 0.537
epoch: 50, train_loss: 0.9473301855981443, train_accuracy: 0.6679, test_loss: 1.4558376132241218, test_accuracy: 0.5489

Accuracy of plane : 56 %
Accuracy of   car : 70 %
Accuracy of  bird : 45 %
Accuracy of   cat : 42 %
Accuracy of  deer : 47 %
Accuracy of   dog : 40 %
Accuracy of  frog : 61 %
Accuracy of horse : 59 %
Accuracy of  ship : 59 %
Accuracy of truck : 64 %
