Net(
  (conv1): Conv2d(3, 4, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(4, 5, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (fc1): Linear(in_features=125, out_features=120, bias=True)
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (fc3): Linear(in_features=84, out_features=10, bias=True)
  (loss_function): CrossEntropyLoss()
)
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1            [-1, 4, 28, 28]             304
         MaxPool2d-2            [-1, 4, 14, 14]               0
            Conv2d-3            [-1, 5, 10, 10]             505
         MaxPool2d-4              [-1, 5, 5, 5]               0
            Linear-5                  [-1, 120]          15,120
            Linear-6                   [-1, 84]          10,164
            Linear-7                   [-1, 10]             850
================================================================
Total params: 26,943
Trainable params: 26,943
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.01
Forward/backward pass size (MB): 0.04
Params size (MB): 0.10
Estimated Total Size (MB): 0.15
----------------------------------------------------------------

Extra info:
Model's state_dict:
conv1.weight 	 torch.Size([4, 3, 5, 5])
conv1.bias 	 torch.Size([4])
conv2.weight 	 torch.Size([5, 4, 5, 5])
conv2.bias 	 torch.Size([5])
fc1.weight 	 torch.Size([120, 125])
fc1.bias 	 torch.Size([120])
fc2.weight 	 torch.Size([84, 120])
fc2.bias 	 torch.Size([84])
fc3.weight 	 torch.Size([10, 84])
fc3.bias 	 torch.Size([10])

Optimizer's state_dict:
state 	 {}
param_groups 	 [{'lr': 0.001, 'momentum': 0.9, 'dampening': 0, 'weight_decay': 0, 'nesterov': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}]

epoch: 1, train_loss: 1.7886416319024563, train_accuracy: 0.33734, test_loss: 1.502957388317585, test_accuracy: 0.4484
epoch: 2, train_loss: 1.4811877077996731, train_accuracy: 0.46598, test_loss: 1.4371511225059628, test_accuracy: 0.4813
epoch: 3, train_loss: 1.3935633547598123, train_accuracy: 0.5018, test_loss: 1.3832589896470309, test_accuracy: 0.498
epoch: 4, train_loss: 1.3431671640831233, train_accuracy: 0.5226, test_loss: 1.3793650382637979, test_accuracy: 0.5001
epoch: 5, train_loss: 1.3031781823867559, train_accuracy: 0.53714, test_loss: 1.3456214819177985, test_accuracy: 0.5264
epoch: 6, train_loss: 1.2764945277622342, train_accuracy: 0.54746, test_loss: 1.3085942754909397, test_accuracy: 0.5296
epoch: 7, train_loss: 1.2512717799305917, train_accuracy: 0.55392, test_loss: 1.322949872303009, test_accuracy: 0.5328
epoch: 8, train_loss: 1.2273272238740325, train_accuracy: 0.5646, test_loss: 1.2668663516104222, test_accuracy: 0.5536
epoch: 9, train_loss: 1.2110036226905883, train_accuracy: 0.5704, test_loss: 1.4553254844337702, test_accuracy: 0.5064
epoch: 10, train_loss: 1.192026203148961, train_accuracy: 0.57312, test_loss: 1.3021594525299967, test_accuracy: 0.5458
epoch: 11, train_loss: 1.1771135683541, train_accuracy: 0.58136, test_loss: 1.2995240817409008, test_accuracy: 0.5456
epoch: 12, train_loss: 1.1656146329040453, train_accuracy: 0.5856, test_loss: 1.294554796841368, test_accuracy: 0.557
epoch: 13, train_loss: 1.1587135304463283, train_accuracy: 0.58898, test_loss: 1.29425412405096, test_accuracy: 0.5512
epoch: 14, train_loss: 1.1436442158380151, train_accuracy: 0.59308, test_loss: 1.2919141173623503, test_accuracy: 0.5458
epoch: 15, train_loss: 1.1357235946083815, train_accuracy: 0.59756, test_loss: 1.2967840424001218, test_accuracy: 0.5482
epoch: 16, train_loss: 1.12808643149741, train_accuracy: 0.6001, test_loss: 1.3529359235316516, test_accuracy: 0.5473
epoch: 17, train_loss: 1.123085441620238, train_accuracy: 0.60134, test_loss: 1.3283619140177965, test_accuracy: 0.5392
epoch: 18, train_loss: 1.1165015939971432, train_accuracy: 0.60394, test_loss: 1.3394927281926328, test_accuracy: 0.5502
epoch: 19, train_loss: 1.110546145756021, train_accuracy: 0.60716, test_loss: 1.2973805764585733, test_accuracy: 0.5468
epoch: 20, train_loss: 1.102297034162581, train_accuracy: 0.60964, test_loss: 1.32404225807935, test_accuracy: 0.5478
epoch: 21, train_loss: 1.0976749864764512, train_accuracy: 0.61002, test_loss: 1.3999780460547655, test_accuracy: 0.5411
epoch: 22, train_loss: 1.0930912647105009, train_accuracy: 0.6116, test_loss: 1.3338273960132152, test_accuracy: 0.553
epoch: 23, train_loss: 1.0891438210841269, train_accuracy: 0.61362, test_loss: 1.3426714020445942, test_accuracy: 0.5498
epoch: 24, train_loss: 1.0838549624290876, train_accuracy: 0.61572, test_loss: 1.4497092623796315, test_accuracy: 0.5322
epoch: 25, train_loss: 1.0842672221019118, train_accuracy: 0.61484, test_loss: 1.3364782544421032, test_accuracy: 0.5461
epoch: 26, train_loss: 1.0735572326881067, train_accuracy: 0.61942, test_loss: 1.4027630278799683, test_accuracy: 0.5332
epoch: 27, train_loss: 1.0702996240339056, train_accuracy: 0.62234, test_loss: 1.3406853851355611, test_accuracy: 0.5457
epoch: 28, train_loss: 1.066902465681024, train_accuracy: 0.62316, test_loss: 1.3293610326804222, test_accuracy: 0.5505
epoch: 29, train_loss: 1.0700154330268687, train_accuracy: 0.621, test_loss: 1.3881459174698219, test_accuracy: 0.5448
epoch: 30, train_loss: 1.069112762173377, train_accuracy: 0.62264, test_loss: 1.3681101165018976, test_accuracy: 0.5463
epoch: 31, train_loss: 1.0612532380990498, train_accuracy: 0.62496, test_loss: 1.3894270325107383, test_accuracy: 0.55
epoch: 32, train_loss: 1.057954040184412, train_accuracy: 0.6241, test_loss: 1.4144631132543086, test_accuracy: 0.5481
epoch: 33, train_loss: 1.0548290451834583, train_accuracy: 0.62738, test_loss: 1.388641554838419, test_accuracy: 0.5362
epoch: 34, train_loss: 1.0563402208799868, train_accuracy: 0.62768, test_loss: 1.459066191902035, test_accuracy: 0.542
epoch: 35, train_loss: 1.057018022219697, train_accuracy: 0.62796, test_loss: 1.4014707434026525, test_accuracy: 0.5518
epoch: 36, train_loss: 1.0568916325506568, train_accuracy: 0.62448, test_loss: 1.4564975431531668, test_accuracy: 0.5292
epoch: 37, train_loss: 1.050175356753245, train_accuracy: 0.62648, test_loss: 1.4045646797306837, test_accuracy: 0.5458
epoch: 38, train_loss: 1.0523605452226847, train_accuracy: 0.62968, test_loss: 1.4026103898782283, test_accuracy: 0.5324
epoch: 39, train_loss: 1.0469337822876312, train_accuracy: 0.63198, test_loss: 1.3962422952411697, test_accuracy: 0.5399
epoch: 40, train_loss: 1.0485394134034962, train_accuracy: 0.62888, test_loss: 1.3856790399485268, test_accuracy: 0.542
epoch: 41, train_loss: 1.0401293749926332, train_accuracy: 0.63316, test_loss: 1.4613083747884492, test_accuracy: 0.5347
epoch: 42, train_loss: 1.0444106172703393, train_accuracy: 0.63132, test_loss: 1.415724811312044, test_accuracy: 0.5469
epoch: 43, train_loss: 1.0411696512763762, train_accuracy: 0.63374, test_loss: 1.4378382915444672, test_accuracy: 0.5306
epoch: 44, train_loss: 1.0408076330158533, train_accuracy: 0.6313, test_loss: 1.444496753801976, test_accuracy: 0.541
epoch: 45, train_loss: 1.0355626757579763, train_accuracy: 0.635, test_loss: 1.4315482408935205, test_accuracy: 0.5384
epoch: 46, train_loss: 1.0382548885553213, train_accuracy: 0.63374, test_loss: 1.4847471551196882, test_accuracy: 0.5372
epoch: 47, train_loss: 1.0357278802156542, train_accuracy: 0.6365, test_loss: 1.4007886917229742, test_accuracy: 0.548
epoch: 48, train_loss: 1.0370217880823835, train_accuracy: 0.63354, test_loss: 1.4762437950689347, test_accuracy: 0.5454
epoch: 49, train_loss: 1.038532165221516, train_accuracy: 0.63354, test_loss: 1.4738528550185264, test_accuracy: 0.5387
epoch: 50, train_loss: 1.0337379836953524, train_accuracy: 0.63594, test_loss: 1.4172505162715912, test_accuracy: 0.5448

Accuracy of plane : 58 %
Accuracy of   car : 72 %
Accuracy of  bird : 47 %
Accuracy of   cat : 33 %
Accuracy of  deer : 46 %
Accuracy of   dog : 39 %
Accuracy of  frog : 65 %
Accuracy of horse : 64 %
Accuracy of  ship : 60 %
Accuracy of truck : 55 %
