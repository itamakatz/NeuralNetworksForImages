Net(
  (conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(6, 6, kernel_size=(5, 5), stride=(1, 1))
  (conv3): Conv2d(6, 6, kernel_size=(5, 5), stride=(1, 1))
  (conv4): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (fc1): Linear(in_features=64, out_features=20, bias=True)
  (fc2): Linear(in_features=20, out_features=10, bias=True)
  (loss_function): CrossEntropyLoss()
)
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1            [-1, 6, 28, 28]             456
            Conv2d-2            [-1, 6, 24, 24]             906
         MaxPool2d-3            [-1, 6, 12, 12]               0
            Conv2d-4              [-1, 6, 8, 8]             906
            Conv2d-5             [-1, 16, 4, 4]           2,416
         MaxPool2d-6             [-1, 16, 2, 2]               0
            Linear-7                   [-1, 20]           1,300
            Linear-8                   [-1, 10]             210
================================================================
Total params: 6,194
Trainable params: 6,194
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.01
Forward/backward pass size (MB): 0.07
Params size (MB): 0.02
Estimated Total Size (MB): 0.11
----------------------------------------------------------------

Extra info:
Model's state_dict:
conv1.weight 	 torch.Size([6, 3, 5, 5])
conv1.bias 	 torch.Size([6])
conv2.weight 	 torch.Size([6, 6, 5, 5])
conv2.bias 	 torch.Size([6])
conv3.weight 	 torch.Size([6, 6, 5, 5])
conv3.bias 	 torch.Size([6])
conv4.weight 	 torch.Size([16, 6, 5, 5])
conv4.bias 	 torch.Size([16])
fc1.weight 	 torch.Size([20, 64])
fc1.bias 	 torch.Size([20])
fc2.weight 	 torch.Size([10, 20])
fc2.bias 	 torch.Size([10])

Optimizer's state_dict:
state 	 {}
param_groups 	 [{'lr': 0.001, 'momentum': 0.9, 'dampening': 0, 'weight_decay': 0, 'nesterov': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]}]

epoch: 1, train_loss: 2.0041040270757677, train_accuracy: 0.22888, test_loss: 1.7640609220981598, test_accuracy: 0.3308
epoch: 2, train_loss: 1.6531025205540657, train_accuracy: 0.38772, test_loss: 1.5327477774500846, test_accuracy: 0.447
epoch: 3, train_loss: 1.5063487022566795, train_accuracy: 0.45196, test_loss: 1.5489726463109255, test_accuracy: 0.4529
epoch: 4, train_loss: 1.4378928851303459, train_accuracy: 0.47966, test_loss: 1.4020413784205914, test_accuracy: 0.4955
epoch: 5, train_loss: 1.3997187274515628, train_accuracy: 0.4933, test_loss: 1.4173964822351932, test_accuracy: 0.4906
epoch: 6, train_loss: 1.372609605884552, train_accuracy: 0.5057, test_loss: 1.3866602840065956, test_accuracy: 0.506
epoch: 7, train_loss: 1.351757885890603, train_accuracy: 0.51566, test_loss: 1.4637096669107676, test_accuracy: 0.489
epoch: 8, train_loss: 1.3355960451364517, train_accuracy: 0.52052, test_loss: 1.4335118128031492, test_accuracy: 0.479
epoch: 9, train_loss: 1.3226296188294888, train_accuracy: 0.52726, test_loss: 1.3026488471642137, test_accuracy: 0.5353
epoch: 10, train_loss: 1.3111844482368231, train_accuracy: 0.53194, test_loss: 1.3990066458314656, test_accuracy: 0.4996
epoch: 11, train_loss: 1.3005105535256862, train_accuracy: 0.5356, test_loss: 1.3347376141130924, test_accuracy: 0.5284
epoch: 12, train_loss: 1.2954580319672824, train_accuracy: 0.5377, test_loss: 1.3112644662603736, test_accuracy: 0.5322
epoch: 13, train_loss: 1.2886483257824182, train_accuracy: 0.54156, test_loss: 1.2821950566353277, test_accuracy: 0.5441
epoch: 14, train_loss: 1.28150816462785, train_accuracy: 0.544, test_loss: 1.3064017595022916, test_accuracy: 0.5334
epoch: 15, train_loss: 1.2761239124286174, train_accuracy: 0.54382, test_loss: 1.381389458746463, test_accuracy: 0.5106

Accuracy of plane : 38 %
Accuracy of   car : 47 %
Accuracy of  bird : 22 %
Accuracy of   cat : 27 %
Accuracy of  deer : 39 %
Accuracy of   dog : 63 %
Accuracy of  frog : 55 %
Accuracy of horse : 61 %
Accuracy of  ship : 73 %
Accuracy of truck : 82 %
