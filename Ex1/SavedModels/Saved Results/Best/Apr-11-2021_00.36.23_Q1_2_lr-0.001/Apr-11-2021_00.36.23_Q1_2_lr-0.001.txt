Net(
  (conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (fc1): Linear(in_features=400, out_features=84, bias=True)
  (fc2): Linear(in_features=84, out_features=10, bias=True)
  (loss_function): CrossEntropyLoss()
)
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1            [-1, 6, 28, 28]             456
         MaxPool2d-2            [-1, 6, 14, 14]               0
            Conv2d-3           [-1, 16, 10, 10]           2,416
         MaxPool2d-4             [-1, 16, 5, 5]               0
            Linear-5                   [-1, 84]          33,684
            Linear-6                   [-1, 10]             850
================================================================
Total params: 37,406
Trainable params: 37,406
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.01
Forward/backward pass size (MB): 0.06
Params size (MB): 0.14
Estimated Total Size (MB): 0.22
----------------------------------------------------------------

Extra info:
Model's state_dict:
conv1.weight 	 torch.Size([6, 3, 5, 5])
conv1.bias 	 torch.Size([6])
conv2.weight 	 torch.Size([16, 6, 5, 5])
conv2.bias 	 torch.Size([16])
fc1.weight 	 torch.Size([84, 400])
fc1.bias 	 torch.Size([84])
fc2.weight 	 torch.Size([10, 84])
fc2.bias 	 torch.Size([10])

Optimizer's state_dict:
state 	 {}
param_groups 	 [{'lr': 0.001, 'momentum': 0.9, 'dampening': 0, 'weight_decay': 0, 'nesterov': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7]}]

epoch: 1, train_loss: 1.625880705885887, train_accuracy: 0.40218, test_loss: 1.366006079608202, test_accuracy: 0.5027
epoch: 2, train_loss: 1.3088063938605785, train_accuracy: 0.52978, test_loss: 1.2557300899609924, test_accuracy: 0.5502
epoch: 3, train_loss: 1.1890740785211324, train_accuracy: 0.5754, test_loss: 1.2551553622201086, test_accuracy: 0.5604
epoch: 4, train_loss: 1.1190137778361142, train_accuracy: 0.60254, test_loss: 1.206205696041882, test_accuracy: 0.5679
epoch: 5, train_loss: 1.0748708079609648, train_accuracy: 0.62078, test_loss: 1.1451083745233714, test_accuracy: 0.5991
epoch: 6, train_loss: 1.029482846691981, train_accuracy: 0.63586, test_loss: 1.1780573191292585, test_accuracy: 0.5901
epoch: 7, train_loss: 0.9978844811034948, train_accuracy: 0.64682, test_loss: 1.1802860689860768, test_accuracy: 0.5965
epoch: 8, train_loss: 0.9711093672374264, train_accuracy: 0.6564, test_loss: 1.1711411726497114, test_accuracy: 0.5999
epoch: 9, train_loss: 0.9465544061421696, train_accuracy: 0.66606, test_loss: 1.1745541222959757, test_accuracy: 0.6031
epoch: 10, train_loss: 0.9274909421520308, train_accuracy: 0.67166, test_loss: 1.29655505175367, test_accuracy: 0.5755
epoch: 11, train_loss: 0.9102741533199604, train_accuracy: 0.67452, test_loss: 1.2519245620850474, test_accuracy: 0.5794
epoch: 12, train_loss: 0.8943474942621495, train_accuracy: 0.68234, test_loss: 1.2184498618878423, test_accuracy: 0.5971
epoch: 13, train_loss: 0.8815105785597023, train_accuracy: 0.68706, test_loss: 1.265393851038441, test_accuracy: 0.588
epoch: 14, train_loss: 0.8688223326501623, train_accuracy: 0.69358, test_loss: 1.2111004246491939, test_accuracy: 0.605
epoch: 15, train_loss: 0.8498596906645131, train_accuracy: 0.6992, test_loss: 1.2479312265555373, test_accuracy: 0.5908
epoch: 16, train_loss: 0.8428606985668186, train_accuracy: 0.70238, test_loss: 1.2673488969055005, test_accuracy: 0.5975
epoch: 17, train_loss: 0.8265881593328411, train_accuracy: 0.70748, test_loss: 1.2860240839495323, test_accuracy: 0.5943
epoch: 18, train_loss: 0.8257051035874453, train_accuracy: 0.70806, test_loss: 1.3130709395237268, test_accuracy: 0.5914
epoch: 19, train_loss: 0.8168730935147591, train_accuracy: 0.71212, test_loss: 1.2820416009918787, test_accuracy: 0.5974
epoch: 20, train_loss: 0.8065027714112727, train_accuracy: 0.7151, test_loss: 1.3629799974370516, test_accuracy: 0.5956
epoch: 21, train_loss: 0.8001844119427121, train_accuracy: 0.7164, test_loss: 1.366872046184202, test_accuracy: 0.5907
epoch: 22, train_loss: 0.7900698050899944, train_accuracy: 0.72004, test_loss: 1.354168175448291, test_accuracy: 0.596
epoch: 23, train_loss: 0.7871147323651723, train_accuracy: 0.72184, test_loss: 1.3851206011107657, test_accuracy: 0.5956
epoch: 24, train_loss: 0.7818077715148125, train_accuracy: 0.7238, test_loss: 1.386880863418011, test_accuracy: 0.5811
epoch: 25, train_loss: 0.7778213334382398, train_accuracy: 0.7236, test_loss: 1.4630248515637592, test_accuracy: 0.5779
epoch: 26, train_loss: 0.7715995513316617, train_accuracy: 0.72702, test_loss: 1.485399274182832, test_accuracy: 0.577
epoch: 27, train_loss: 0.7651836109297373, train_accuracy: 0.72758, test_loss: 1.4657152544532552, test_accuracy: 0.5779
epoch: 28, train_loss: 0.7615941910561512, train_accuracy: 0.73224, test_loss: 1.496163878295198, test_accuracy: 0.5761
epoch: 29, train_loss: 0.7594229616148025, train_accuracy: 0.7315, test_loss: 1.4585439817323234, test_accuracy: 0.5835
epoch: 30, train_loss: 0.7562662405461562, train_accuracy: 0.73318, test_loss: 1.5175716244532493, test_accuracy: 0.5668
epoch: 31, train_loss: 0.7555578268965939, train_accuracy: 0.73304, test_loss: 1.585913686678451, test_accuracy: 0.5787
epoch: 32, train_loss: 0.7472385957540717, train_accuracy: 0.73636, test_loss: 1.5418870692952535, test_accuracy: 0.5775
epoch: 33, train_loss: 0.7523283639504411, train_accuracy: 0.73382, test_loss: 1.5457180225373246, test_accuracy: 0.5713
epoch: 34, train_loss: 0.7453352133001759, train_accuracy: 0.73764, test_loss: 1.551747629109025, test_accuracy: 0.5732
epoch: 35, train_loss: 0.7416092420063937, train_accuracy: 0.73904, test_loss: 1.5395563859980554, test_accuracy: 0.5695
epoch: 36, train_loss: 0.7374458388800543, train_accuracy: 0.74162, test_loss: 1.5970029346530326, test_accuracy: 0.5679
epoch: 37, train_loss: 0.7329836790796771, train_accuracy: 0.74204, test_loss: 1.6282595428197644, test_accuracy: 0.5648
epoch: 38, train_loss: 0.7372900476013843, train_accuracy: 0.74076, test_loss: 1.611471033584178, test_accuracy: 0.5754
epoch: 39, train_loss: 0.7352552940771961, train_accuracy: 0.74332, test_loss: 1.606975457594695, test_accuracy: 0.5766
epoch: 40, train_loss: 0.7292672553832236, train_accuracy: 0.74264, test_loss: 1.6141499559095072, test_accuracy: 0.5657
epoch: 41, train_loss: 0.7264265240301311, train_accuracy: 0.74712, test_loss: 1.6875628369736426, test_accuracy: 0.5607
epoch: 42, train_loss: 0.7268932640336763, train_accuracy: 0.74506, test_loss: 1.7399257315109484, test_accuracy: 0.5421
epoch: 43, train_loss: 0.7265270871725189, train_accuracy: 0.74578, test_loss: 1.6760118346815884, test_accuracy: 0.5657
epoch: 44, train_loss: 0.7303868109237939, train_accuracy: 0.74314, test_loss: 1.7305298871979262, test_accuracy: 0.5566
epoch: 45, train_loss: 0.7214454338419442, train_accuracy: 0.74476, test_loss: 1.6930750131049659, test_accuracy: 0.5508
epoch: 46, train_loss: 0.7209532390351019, train_accuracy: 0.7458, test_loss: 1.687327283846971, test_accuracy: 0.5623
epoch: 47, train_loss: 0.7227007473395192, train_accuracy: 0.74654, test_loss: 1.647313758052024, test_accuracy: 0.5556
epoch: 48, train_loss: 0.7225748578591501, train_accuracy: 0.74604, test_loss: 1.730205891811956, test_accuracy: 0.5627
epoch: 49, train_loss: 0.7285751091313946, train_accuracy: 0.7458, test_loss: 1.7322422337915748, test_accuracy: 0.5625
epoch: 50, train_loss: 0.7167213324282371, train_accuracy: 0.75032, test_loss: 1.7550151390365762, test_accuracy: 0.561

Accuracy of plane : 61 %
Accuracy of   car : 65 %
Accuracy of  bird : 42 %
Accuracy of   cat : 35 %
Accuracy of  deer : 45 %
Accuracy of   dog : 52 %
Accuracy of  frog : 67 %
Accuracy of horse : 58 %
Accuracy of  ship : 69 %
Accuracy of truck : 62 %
