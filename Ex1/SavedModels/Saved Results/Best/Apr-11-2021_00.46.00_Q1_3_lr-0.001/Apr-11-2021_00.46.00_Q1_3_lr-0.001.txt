Net(
  (conv1): Conv2d(3, 6, kernel_size=(3, 3), stride=(1, 1))
  (conv2): Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (fc1): Linear(in_features=576, out_features=120, bias=True)
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (fc3): Linear(in_features=84, out_features=10, bias=True)
  (loss_function): CrossEntropyLoss()
)
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1            [-1, 6, 30, 30]             168
         MaxPool2d-2            [-1, 6, 15, 15]               0
            Conv2d-3           [-1, 16, 13, 13]             880
         MaxPool2d-4             [-1, 16, 6, 6]               0
            Linear-5                  [-1, 120]          69,240
            Linear-6                   [-1, 84]          10,164
            Linear-7                   [-1, 10]             850
================================================================
Total params: 81,302
Trainable params: 81,302
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.01
Forward/backward pass size (MB): 0.08
Params size (MB): 0.31
Estimated Total Size (MB): 0.40
----------------------------------------------------------------

Extra info:
Model's state_dict:
conv1.weight 	 torch.Size([6, 3, 3, 3])
conv1.bias 	 torch.Size([6])
conv2.weight 	 torch.Size([16, 6, 3, 3])
conv2.bias 	 torch.Size([16])
fc1.weight 	 torch.Size([120, 576])
fc1.bias 	 torch.Size([120])
fc2.weight 	 torch.Size([84, 120])
fc2.bias 	 torch.Size([84])
fc3.weight 	 torch.Size([10, 84])
fc3.bias 	 torch.Size([10])

Optimizer's state_dict:
state 	 {}
param_groups 	 [{'lr': 0.001, 'momentum': 0.9, 'dampening': 0, 'weight_decay': 0, 'nesterov': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}]

epoch: 1, train_loss: 1.6945601917022466, train_accuracy: 0.37666, test_loss: 1.3712232653200627, test_accuracy: 0.5061
epoch: 2, train_loss: 1.2799837190461159, train_accuracy: 0.54066, test_loss: 1.2342277700409294, test_accuracy: 0.5627
epoch: 3, train_loss: 1.1192768033096194, train_accuracy: 0.60376, test_loss: 1.1246136651486158, test_accuracy: 0.6086
epoch: 4, train_loss: 1.0084180796375126, train_accuracy: 0.64762, test_loss: 1.0656387452438474, test_accuracy: 0.6289
epoch: 5, train_loss: 0.9331306953909994, train_accuracy: 0.67316, test_loss: 1.064388395716995, test_accuracy: 0.6287
epoch: 6, train_loss: 0.8631162391942553, train_accuracy: 0.69698, test_loss: 1.0694819567747413, test_accuracy: 0.6282
epoch: 7, train_loss: 0.812098901802674, train_accuracy: 0.71412, test_loss: 1.0963953052489086, test_accuracy: 0.6316
epoch: 8, train_loss: 0.7601612440906651, train_accuracy: 0.7299, test_loss: 1.1783525415265932, test_accuracy: 0.6116
epoch: 9, train_loss: 0.7159289681673795, train_accuracy: 0.74504, test_loss: 1.0720840210102498, test_accuracy: 0.6428
epoch: 10, train_loss: 0.671202323993044, train_accuracy: 0.76286, test_loss: 1.2041857355159706, test_accuracy: 0.6301
epoch: 11, train_loss: 0.6434351227356354, train_accuracy: 0.77076, test_loss: 1.271565119768557, test_accuracy: 0.6172
epoch: 12, train_loss: 0.6101946815788583, train_accuracy: 0.78086, test_loss: 1.241068774137972, test_accuracy: 0.6293
epoch: 13, train_loss: 0.5781968591801869, train_accuracy: 0.7945, test_loss: 1.2615991707880807, test_accuracy: 0.6357
epoch: 14, train_loss: 0.5532580621215066, train_accuracy: 0.80052, test_loss: 1.2914160383154987, test_accuracy: 0.6347
epoch: 15, train_loss: 0.5369738643351953, train_accuracy: 0.80838, test_loss: 1.314900881496357, test_accuracy: 0.637
epoch: 16, train_loss: 0.5175740384916827, train_accuracy: 0.81508, test_loss: 1.3543690895955545, test_accuracy: 0.6222
epoch: 17, train_loss: 0.49829074185033206, train_accuracy: 0.82158, test_loss: 1.4149537605353135, test_accuracy: 0.6238
epoch: 18, train_loss: 0.48330228938839764, train_accuracy: 0.82692, test_loss: 1.464901543083413, test_accuracy: 0.627
epoch: 19, train_loss: 0.4610131605957981, train_accuracy: 0.83464, test_loss: 1.4916378228329101, test_accuracy: 0.6226
epoch: 20, train_loss: 0.4479275555001218, train_accuracy: 0.84084, test_loss: 1.6242719735137259, test_accuracy: 0.6013
epoch: 21, train_loss: 0.44484179359357867, train_accuracy: 0.84138, test_loss: 1.6525407802081706, test_accuracy: 0.6049
epoch: 22, train_loss: 0.42963787001173726, train_accuracy: 0.84924, test_loss: 1.5690095104256179, test_accuracy: 0.6113
epoch: 23, train_loss: 0.4295480735148313, train_accuracy: 0.84634, test_loss: 1.7847653226636815, test_accuracy: 0.5908
epoch: 24, train_loss: 0.4155281273364258, train_accuracy: 0.85282, test_loss: 1.6880072754605397, test_accuracy: 0.6107
epoch: 25, train_loss: 0.39502685742614946, train_accuracy: 0.86096, test_loss: 1.8833030215882478, test_accuracy: 0.5972
epoch: 26, train_loss: 0.4038752605406289, train_accuracy: 0.85922, test_loss: 1.886269681656432, test_accuracy: 0.5973
epoch: 27, train_loss: 0.3987584760629847, train_accuracy: 0.86192, test_loss: 1.8899270703426798, test_accuracy: 0.5977
epoch: 28, train_loss: 0.38970723644930505, train_accuracy: 0.864, test_loss: 1.999556411819661, test_accuracy: 0.6017
epoch: 29, train_loss: 0.3911162911808096, train_accuracy: 0.86374, test_loss: 1.96265932738251, test_accuracy: 0.5973
epoch: 30, train_loss: 0.3717999975595859, train_accuracy: 0.8687, test_loss: 2.02166431687218, test_accuracy: 0.6022
epoch: 31, train_loss: 0.38081402495053074, train_accuracy: 0.86878, test_loss: 2.0624520806287028, test_accuracy: 0.6087
epoch: 32, train_loss: 0.3780374670582887, train_accuracy: 0.87048, test_loss: 2.0481000945678445, test_accuracy: 0.5972
epoch: 33, train_loss: 0.36738249193959577, train_accuracy: 0.8727, test_loss: 2.038959942034718, test_accuracy: 0.6029
epoch: 34, train_loss: 0.3737308389067311, train_accuracy: 0.87274, test_loss: 2.1472944324302192, test_accuracy: 0.5944
epoch: 35, train_loss: 0.3723767678638522, train_accuracy: 0.8733, test_loss: 2.2825743127611475, test_accuracy: 0.5949
epoch: 36, train_loss: 0.36899515610241984, train_accuracy: 0.8747, test_loss: 2.2097647679946903, test_accuracy: 0.5983
epoch: 37, train_loss: 0.3726768047976305, train_accuracy: 0.87582, test_loss: 2.3059037647683973, test_accuracy: 0.6001
epoch: 38, train_loss: 0.36392914822678146, train_accuracy: 0.8776, test_loss: 2.4015806719381616, test_accuracy: 0.5861
epoch: 39, train_loss: 0.3614424575697494, train_accuracy: 0.87896, test_loss: 2.201883908331057, test_accuracy: 0.5935
epoch: 40, train_loss: 0.3635275836614726, train_accuracy: 0.87894, test_loss: 2.1954076066558854, test_accuracy: 0.5909
epoch: 41, train_loss: 0.3629169009255191, train_accuracy: 0.87804, test_loss: 2.294432388398642, test_accuracy: 0.5928
epoch: 42, train_loss: 0.3715174777472645, train_accuracy: 0.87736, test_loss: 2.386363591407941, test_accuracy: 0.5996
epoch: 43, train_loss: 0.3554565526316862, train_accuracy: 0.88096, test_loss: 2.3769993736677453, test_accuracy: 0.5808
epoch: 44, train_loss: 0.3587496930410306, train_accuracy: 0.88188, test_loss: 2.5116316088665562, test_accuracy: 0.5866
epoch: 45, train_loss: 0.36106106000534377, train_accuracy: 0.88024, test_loss: 2.4716167209365367, test_accuracy: 0.5906
epoch: 46, train_loss: 0.35463504917081745, train_accuracy: 0.8829, test_loss: 2.6232729105354853, test_accuracy: 0.5841
epoch: 47, train_loss: 0.37103742772532095, train_accuracy: 0.87838, test_loss: 2.421440936296685, test_accuracy: 0.5939
epoch: 48, train_loss: 0.3681377277541906, train_accuracy: 0.88056, test_loss: 2.391952003295896, test_accuracy: 0.5834
epoch: 49, train_loss: 0.3516306198626399, train_accuracy: 0.88384, test_loss: 2.577792575249416, test_accuracy: 0.5823
epoch: 50, train_loss: 0.35568004465844033, train_accuracy: 0.88454, test_loss: 2.5938551762797695, test_accuracy: 0.5851

Accuracy of plane : 63 %
Accuracy of   car : 69 %
Accuracy of  bird : 42 %
Accuracy of   cat : 37 %
Accuracy of  deer : 49 %
Accuracy of   dog : 57 %
Accuracy of  frog : 66 %
Accuracy of horse : 58 %
Accuracy of  ship : 74 %
Accuracy of truck : 65 %
